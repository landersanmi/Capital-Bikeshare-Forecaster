# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class StationInformation(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, station_id: str=None, name: str=None, lat: str=None, lon: str=None, capacity: str=None):  # noqa: E501
        """StationInformation - a model defined in Swagger

        :param station_id: The station_id of this StationInformation.  # noqa: E501
        :type station_id: str
        :param name: The name of this StationInformation.  # noqa: E501
        :type name: str
        :param lat: The lat of this StationInformation.  # noqa: E501
        :type lat: str
        :param lon: The lon of this StationInformation.  # noqa: E501
        :type lon: str
        :param capacity: The capacity of this StationInformation.  # noqa: E501
        :type capacity: str
        """
        self.swagger_types = {
            'station_id': str,
            'name': str,
            'lat': str,
            'lon': str,
            'capacity': str
        }

        self.attribute_map = {
            'station_id': 'station_id',
            'name': 'name',
            'lat': 'lat',
            'lon': 'lon',
            'capacity': 'capacity'
        }
        self._station_id = station_id
        self._name = name
        self._lat = lat
        self._lon = lon
        self._capacity = capacity

    @classmethod
    def from_dict(cls, dikt) -> 'StationInformation':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The station_information of this StationInformation.  # noqa: E501
        :rtype: StationInformation
        """
        return util.deserialize_model(dikt, cls)

    @property
    def station_id(self) -> str:
        """Gets the station_id of this StationInformation.

        ID of the Station  # noqa: E501

        :return: The station_id of this StationInformation.
        :rtype: str
        """
        return self._station_id

    @station_id.setter
    def station_id(self, station_id: str):
        """Sets the station_id of this StationInformation.

        ID of the Station  # noqa: E501

        :param station_id: The station_id of this StationInformation.
        :type station_id: str
        """

        self._station_id = station_id

    @property
    def name(self) -> str:
        """Gets the name of this StationInformation.

        Name of the Station  # noqa: E501

        :return: The name of this StationInformation.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this StationInformation.

        Name of the Station  # noqa: E501

        :param name: The name of this StationInformation.
        :type name: str
        """

        self._name = name

    @property
    def lat(self) -> str:
        """Gets the lat of this StationInformation.

        Latitude of the Station location  # noqa: E501

        :return: The lat of this StationInformation.
        :rtype: str
        """
        return self._lat

    @lat.setter
    def lat(self, lat: str):
        """Sets the lat of this StationInformation.

        Latitude of the Station location  # noqa: E501

        :param lat: The lat of this StationInformation.
        :type lat: str
        """

        self._lat = lat

    @property
    def lon(self) -> str:
        """Gets the lon of this StationInformation.

        Longitude of the Station location  # noqa: E501

        :return: The lon of this StationInformation.
        :rtype: str
        """
        return self._lon

    @lon.setter
    def lon(self, lon: str):
        """Sets the lon of this StationInformation.

        Longitude of the Station location  # noqa: E501

        :param lon: The lon of this StationInformation.
        :type lon: str
        """

        self._lon = lon

    @property
    def capacity(self) -> str:
        """Gets the capacity of this StationInformation.

        Number of bikes that can be locked in the station  # noqa: E501

        :return: The capacity of this StationInformation.
        :rtype: str
        """
        return self._capacity

    @capacity.setter
    def capacity(self, capacity: str):
        """Sets the capacity of this StationInformation.

        Number of bikes that can be locked in the station  # noqa: E501

        :param capacity: The capacity of this StationInformation.
        :type capacity: str
        """

        self._capacity = capacity
