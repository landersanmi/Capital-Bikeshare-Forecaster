# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.measure import Measure  # noqa: F401,E501
from swagger_server import util


class TripDayData(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, _date: str=None, station_id: str=None, rentals: List[Measure]=None, returns: List[Measure]=None):  # noqa: E501
        """TripDayData - a model defined in Swagger

        :param _date: The _date of this TripDayData.  # noqa: E501
        :type _date: str
        :param station_id: The station_id of this TripDayData.  # noqa: E501
        :type station_id: str
        :param rentals: The rentals of this TripDayData.  # noqa: E501
        :type rentals: List[Measure]
        :param returns: The returns of this TripDayData.  # noqa: E501
        :type returns: List[Measure]
        """
        self.swagger_types = {
            '_date': str,
            'station_id': str,
            'rentals': List[Measure],
            'returns': List[Measure]
        }

        self.attribute_map = {
            '_date': 'date',
            'station_id': 'station_id',
            'rentals': 'rentals',
            'returns': 'returns'
        }
        self.__date = _date
        self._station_id = station_id
        self._rentals = rentals
        self._returns = returns

    @classmethod
    def from_dict(cls, dikt) -> 'TripDayData':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The trip_day_data of this TripDayData.  # noqa: E501
        :rtype: TripDayData
        """
        return util.deserialize_model(dikt, cls)

    @property
    def _date(self) -> str:
        """Gets the _date of this TripDayData.

        Date of related trips data  # noqa: E501

        :return: The _date of this TripDayData.
        :rtype: str
        """
        return self.__date

    @_date.setter
    def _date(self, _date: str):
        """Sets the _date of this TripDayData.

        Date of related trips data  # noqa: E501

        :param _date: The _date of this TripDayData.
        :type _date: str
        """

        self.__date = _date

    @property
    def station_id(self) -> str:
        """Gets the station_id of this TripDayData.

        Id of the station  # noqa: E501

        :return: The station_id of this TripDayData.
        :rtype: str
        """
        return self._station_id

    @station_id.setter
    def station_id(self, station_id: str):
        """Sets the station_id of this TripDayData.

        Id of the station  # noqa: E501

        :param station_id: The station_id of this TripDayData.
        :type station_id: str
        """

        self._station_id = station_id

    @property
    def rentals(self) -> List[Measure]:
        """Gets the rentals of this TripDayData.


        :return: The rentals of this TripDayData.
        :rtype: List[Measure]
        """
        return self._rentals

    @rentals.setter
    def rentals(self, rentals: List[Measure]):
        """Sets the rentals of this TripDayData.


        :param rentals: The rentals of this TripDayData.
        :type rentals: List[Measure]
        """

        self._rentals = rentals

    @property
    def returns(self) -> List[Measure]:
        """Gets the returns of this TripDayData.


        :return: The returns of this TripDayData.
        :rtype: List[Measure]
        """
        return self._returns

    @returns.setter
    def returns(self, returns: List[Measure]):
        """Sets the returns of this TripDayData.


        :param returns: The returns of this TripDayData.
        :type returns: List[Measure]
        """

        self._returns = returns
